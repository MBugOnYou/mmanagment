{"version":3,"sources":["asset/image/loading.svg","logo.svg","components/Common/Common.js","components/Navheader/Navheader.js","components/HomePageContent/HomePageContent.js","components/Footer/NavFooter.js","pages/HomePage.js","components/RestApi/RestClient.js","components/RestApi/AppUrl.js","components/Loading/Loading.js","components/Common/ThisMonthYear.js","components/Common/TodayDate.js","components/AddOrRemoveContent/AddOrRemoveContent.js","pages/AddOrRemoveMember.js","components/Common/GetMonthName.js","components/CalculateMealContent/CalculateMealContent.js","pages/CalculateMeal.js","components/DailyCostContent/DailyCostContent.js","pages/DailyCost.js","components/DepositMoneyContent/DepositMoneyContent.js","pages/DepositPage.js","pages/LoginPage.js","components/PreviousMonthContent/PreviousMonthContent.js","pages/PreviousMonth.js","pages/RegisterPage.js","components/TotalMealContent/TotalMealContent.js","pages/TotalMeal.js","router/PrivateRoute.js","router/AppRouter.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","getUser","userStr","sessionStorage","getItem","console","log","JSON","parse","getToken","Navheader","props","logout","removeItem","setState","state","user","isManager","this","manager","to","Navbar","bg","variant","Brand","src","width","height","className","alt","Nav","Link","exact","activeStyle","color","NavItem","Button","onClick","Component","HomePageContent","current_page","total","per_page","addmemberList","removeMemberList","deleteshow","editshow","addshow","loading","selecteduser","Option","error","selectedItem","id","cost","date","user_id","yr_month","mess_name","loggedin","access_token","window","scroll","Container","Row","Col","sm","md","lg","name","Card","style","Body","Title","NavFooter","fluid","HomePage","RestClient","postURL","postJsondata","axios","post","headers","then","response","data","catch","AppUrl","login","baseUrl","signup","updateUserInfoModel","createDailyMeal","getDailyMealByDate","getAllUserApproveStatus","getAllApprovedUserList","createDepositMoney","getDepositMoneyByYearMonth","getDepositMoneyByYearMonthAndUserID","getTotalDailyMealByDate","getTotalMealByMonthAndUserID","getTotalMealByMonth","getAllMessList","createDailyCost","getDailyCostByMonthAndUserID","getTotalDailyCostByMonth","createPreviousMonth","getPreviousMonthByMonth","getPreviousMonthByUserID","Loading","ThisMonthYear","dateObj","Date","month","getUTCMonth","getUTCDate","getUTCFullYear","TodayDate","day","year","AddOrRemoveContent","errorToast","a","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","successToast","success","RemoveMember","jsonObject","approve","PostRequest","stringify","result","AddMember","isAddmember","myview","map","myList1","bind","myview1","Table","striped","bordered","hover","AddOrRemoveMember","GetMonthName","number","CalculateMealContent","scheduled","dailyMealArrayList","depositAmountArrayList","userInfoArrayList","userlist","yearMonth","TotalCostServer","TotalmealServer","Month","MillRateServer","pageNumber","getAllPreviousMontdataFromServer","url","mess","millRate","totalmeal","totalCost","userMealList","userDepositList","approveuserList","meal_rate","total_deposit","total_cost","extra_money","given_money","Math","round","onAddDailyCost","activePage","itemsCountPerPage","totalItemsCount","pageRangeDisplayed","itemClass","linkClass","firstPageText","lastPageText","nextPageText","prevPageText","onChange","handlePageChange","CalculateMeal","DailyCostContent","e","preventDefault","amount","document","getElementById","value","length","getDailyCostByMonth","Form","Control","type","placeholder","DailyCost","DepositMoneyContent","_onSelect","option","label","item","creation_date","getAllDepositAmountFromServer","getUserList","push","defaultOption","options","DepositPage","LoginPage","onLoginClick","email","password","mail","token","message","mydata","setItem","OnRegister","onSubmit","Group","Label","PreviousMonthContent","handleSelect","onLoadData","isAdmin","onSelect","PreviousMonth","RegisterPage","TotalMealContent","total_meal","TotalMeal","PrivateRoute","component","rest","render","pathname","from","location","AppRouter","path","App","Boolean","hostname","match","ReactDOM","StrictMode","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ae1a30bb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loading.9064981b.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","// return the user data from the session storage\nexport const getUser = () => {\n    const userStr = sessionStorage.getItem('user');\n    console.log(userStr)\n    if (userStr) return JSON.parse(userStr);\n    else return null;\n  }\n   \n  // return the token from the session storage\n  export const getToken = () => {\n    return sessionStorage.getItem('token') || null;\n  }\n   \n  // remove the token and user from the session storage\n  export const removeUserSession = () => {\n    sessionStorage.removeItem('token');\n    sessionStorage.removeItem('user');\n  }\n   \n  // set the token and user from the session storage\n  export const setUserSession = (token, user) => {\n    sessionStorage.setItem('token', token);\n    sessionStorage.setItem('user', JSON.stringify(user));\n  }","import React, { Component, Fragment } from \"react\";\nimport { Navbar, Nav, NavDropdown, Button, NavItem } from \"react-bootstrap\";\nimport { NavLink, Redirect } from \"react-router-dom\";\nimport { removeUserSession, getToken, getUser } from \"../Common/Common\";\nclass Navheader extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      logout: false,\n      user: getUser(),\n    };\n  }\n\n  logout = () => {\n    removeUserSession();\n    this.setState({ logout: true });\n  };\n\n  render() {\n    let isManager;\n\n    if (this.state.user[0].manager == 1) {\n      isManager = 1;\n    } else {\n      isManager = 0;\n    }\n\n    if (this.state.logout == true) {\n      return <Redirect to=\"/login\"></Redirect>;\n    } else {\n      return (\n        <Fragment>\n          <Navbar bg=\"dark\" variant=\"dark\">\n            <Navbar.Brand>\n              <img\n                src=\"https://image.flaticon.com/icons/svg/1055/1055646.svg\"\n                width=\"30\"\n                height=\"30\"\n                className=\"d-inline-block align-top\"\n                alt=\"React Bootstrap logo\"\n              />\n            </Navbar.Brand>\n            <Nav className=\"mr-auto justify-content-center\">\n              <Nav.Link>\n                <NavLink exact activeStyle={{ color: \"white\" }} to=\"/\">\n                  Home\n                </NavLink>\n              </Nav.Link>\n\n              {isManager == 1 ? (\n                <Nav.Link>\n                  <NavLink\n                    exact\n                    activeStyle={{ color: \"white\" }}\n                    to=\"/AddOrRemoveMember\"\n                  >\n                    AddOrRemoveMember\n                  </NavLink>\n                </Nav.Link>\n              ) : null}\n\n              {isManager == 1 ? (\n                <Nav.Link>\n                  <NavLink\n                    exact\n                    activeStyle={{ color: \"white\" }}\n                    to=\"/CalculateMeal\"\n                  >\n                    CalculateMeal\n                  </NavLink>\n                </Nav.Link>\n              ) : null}\n\n              {isManager == 1 ? (\n                <Nav.Link>\n                  <NavLink\n                    exact\n                    activeStyle={{ color: \"white\" }}\n                    to=\"/DailyCost\"\n                  >\n                    DailyCost\n                  </NavLink>\n                </Nav.Link>\n              ) : null}\n\n        \n\n              {isManager == 1 ? (\n                <Nav.Link>\n                  <NavLink exact activeStyle={{ color: \"white\" }} to=\"/Deposit\">\n                    Deposit Money\n                  </NavLink>\n                </Nav.Link>\n              ) : null}\n\n              <Nav.Link>\n                <NavLink exact activeStyle={{ color: \"white\" }} to=\"/PreviousMonth\">\n                Previous Month\n                </NavLink>\n              </Nav.Link>\n\n              <Nav.Link>\n                <NavLink exact activeStyle={{ color: \"white\" }} to=\"/TotalMeal\">\n                Total Meal\n                </NavLink>\n              </Nav.Link>\n\n              <NavItem>\n                <Button color=\"light\" onClick={this.logout}>\n                  Logout\n                </Button>\n              </NavItem>\n            </Nav>\n          </Navbar>\n        </Fragment>\n      );\n    }\n  }\n}\n\nexport default Navheader;\n","import React, { Component, Fragment } from \"react\";\nimport {\n  Container,\n  Col,\n  Row,\n  Form,\n  Button,\n  Card,\n  NavLink,\n} from \"react-bootstrap\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nimport { getToken, getUser } from \"../Common/Common\";\n\nclass HomePageContent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      current_page: 1,\n      total: 0,\n      per_page: 10,\n      addmemberList: [],\n      removeMemberList: [],\n      user: getUser(),\n      deleteshow: false,\n      editshow: false,\n      addshow: false,\n      loading: true,\n      selecteduser: \"\",\n      Option: [],\n      error: false,\n      selectedItem: {\n        id: 0,\n        cost: 0,\n        date: \"\",\n        user_id: 0,\n        yr_month: \"\",\n        mess_name: \"\",\n      },\n      loggedin: false,\n      access_token: \"\",\n    };\n  }\n\n  componentDidMount() {\n    window.scroll(0, 0);\n  }\n\n  render() {\n    let isManager;\n\n    if (this.state.user[0].manager == 1) {\n      isManager = 1;\n    } else {\n      isManager = 0;\n    }\n\n    return (\n      <Fragment>\n        <Container>\n          <br></br>\n\n          <Row>\n            <Col sm={12} md={4} lg={4}>\n              <h3 className=\"text-center white\">\n                User name:- {this.state.user[0].name}\n              </h3>\n            </Col>\n\n            <Col sm={12} md={4} lg={4}>\n              <h3 className=\"text-center white\">\n                Mess name:- {this.state.user[0].mess_name}\n              </h3>\n            </Col>\n\n            <Col sm={12} md={4} lg={4}>\n              <h3 className=\"text-center white\">\n                Type:- {this.state.user[0].manager == 1 ? \"Admin\" : \"User\"}\n              </h3>\n            </Col>\n          </Row>\n\n          <br></br>\n          <br></br>\n          <Row>\n            {isManager == 1 ? (\n              <Col sm={12} md={4} lg={4}>\n                <Card\n                  className=\"shadow-lg p-3 mb-5 bg-white rounded\"\n                  style={{ width: \"20rem\" }}\n                >\n                  <Card.Body className=\"text-center\">\n                    <img\n                      src=\"https://www.flaticon.com/premium-icon/icons/svg/3160/3160690.svg\"\n                      width=\"80\"\n                      height=\"80\"\n                      alt=\"React Bootstrap logo\"\n                    />\n                    <br></br>\n\n                    <Card.Title className=\"text-center\">\n                      <h4>Add/Remove Member</h4>\n                    </Card.Title>\n\n                    <br></br>\n                    <Link\n                      to=\"/AddOrRemoveMember\"\n                      className=\"btn btn-block btn-primary\"\n                    >\n                      Go\n                    </Link>\n                  </Card.Body>\n                </Card>\n              </Col>\n            ) : null}\n            {isManager == 1 ? (\n              <Col sm={12} md={4} lg={4}>\n                <Card\n                  className=\"shadow-lg p-3 mb-5 bg-white rounded\"\n                  style={{ width: \"20rem\" }}\n                >\n                  <Card.Body className=\"text-center\">\n                    <img\n                      src=\"https://image.flaticon.com/icons/svg/550/550607.svg\"\n                      width=\"80\"\n                      height=\"80\"\n                      alt=\"React Bootstrap logo\"\n                    />\n                    <Card.Title className=\"text-center\">\n                      <h3>Calculate meal</h3>\n                    </Card.Title>\n                    <br></br>\n\n                    <Link\n                      to=\"/CalculateMeal\"\n                      className=\"btn btn-block btn-primary\"\n                    >\n                      Go\n                    </Link>\n                  </Card.Body>\n                </Card>\n              </Col>\n            ) : null}\n\n            {isManager == 1 ? (\n              <Col sm={12} md={4} lg={4}>\n                <Card\n                  className=\"shadow-lg p-3 mb-5 bg-white rounded\"\n                  style={{ width: \"20rem\" }}\n                >\n                  <Card.Body className=\"text-center\">\n                    <img\n                      src=\"https://image.flaticon.com/icons/svg/3004/3004164.svg\"\n                      width=\"80\"\n                      height=\"80\"\n                      alt=\"React Bootstrap logo\"\n                    />\n                    <Card.Title className=\"text-center\">\n                      <h3>Daily Cost </h3>\n                    </Card.Title>\n                    <br></br>\n\n                    <Link to=\"/DailyCost\" className=\"btn btn-block btn-primary\">\n                      Go\n                    </Link>\n                  </Card.Body>\n                </Card>\n              </Col>\n            ) : null}\n            {isManager == 1 ? (\n              <Col sm={12} md={4} lg={4}>\n                <Card\n                  className=\"shadow-lg p-3 mb-5 bg-white rounded\"\n                  style={{ width: \"20rem\" }}\n                >\n                  <Card.Body className=\"text-center\">\n                    <img\n                      src=\"https://image.flaticon.com/icons/svg/3135/3135706.svg\"\n                      width=\"80\"\n                      height=\"80\"\n                      alt=\"React Bootstrap logo\"\n                    />\n                    <Card.Title className=\"text-center\">\n                      <h3>Deposit Money</h3>\n                    </Card.Title>\n                    <br></br>\n\n                    <Link to=\"/Deposit\" className=\"btn btn-block btn-primary\">\n                      Go\n                    </Link>\n                  </Card.Body>\n                </Card>\n              </Col>\n            ) : null}\n            <Col sm={12} md={4} lg={4}>\n              <Card\n                className=\"shadow-lg p-3 mb-5 bg-white rounded\"\n                style={{ width: \"20rem\" }}\n              >\n                <Card.Body className=\"text-center\">\n                  <img\n                    src=\"https://image.flaticon.com/icons/svg/2413/2413874.svg\"\n                    width=\"80\"\n                    height=\"80\"\n                    alt=\"React Bootstrap logo\"\n                  />\n                  <Card.Title className=\"text-center\">\n                    <h3>Previous Month </h3>\n                  </Card.Title>\n                  <br></br>\n\n                  <Link\n                    to=\"/PreviousMonth\"\n                    className=\"btn btn-block btn-primary\"\n                  >\n                    Go\n                  </Link>\n                </Card.Body>\n              </Card>\n            </Col>\n\n            <Col sm={12} md={4} lg={4}>\n              <Card\n                className=\"shadow-lg p-3 mb-5 bg-white rounded\"\n                style={{ width: \"20rem\" }}\n              >\n                <Card.Body className=\"text-center\">\n                  <img\n                    src=\"https://www.flaticon.com/premium-icon/icons/svg/1047/1047467.svg\"\n                    width=\"80\"\n                    height=\"80\"\n                    alt=\"React Bootstrap logo\"\n                  />\n                  <Card.Title className=\"text-center\">\n                    <h3>Total Meal </h3>\n                  </Card.Title>\n                  <br></br>\n\n                  <Link to=\"/TotalMeal\" className=\"btn btn-block btn-primary\">\n                    Go\n                  </Link>\n                </Card.Body>\n              </Card>\n            </Col>\n          </Row>\n        </Container>\n      </Fragment>\n    );\n  }\n}\n\nexport default HomePageContent;\n","import React, { Component, Fragment } from 'react';\nimport { Container } from 'react-bootstrap';\n\nclass NavFooter extends Component {\n    render() {\n        return (\n          <Fragment>\n            <Container fluid={true} className=\"text-center footer dark\">\n              <p className=\"footertext\">Copyright @Mess Managment 2020</p>\n            </Container>\n          </Fragment>\n        );\n      }\n}\n\nexport default NavFooter;","import React, { Component, Fragment } from 'react';\nimport Navheader from '../components/Navheader/Navheader';\n\nimport HomePageContent from '../components/HomePageContent/HomePageContent';\nimport NavFooter from '../components/Footer/NavFooter';\nimport { getUser } from '../components/Common/Common';\n\n\n\nclass HomePage extends Component {\n\n\n\n\n\n    render() {\n\n\n\n\n        return (\n            <Fragment>\n            <Navheader></Navheader>\n            <HomePageContent></HomePageContent>\n            <NavFooter></NavFooter>\n\n            \n        </Fragment>\n        );\n    }\n}\n\nexport default HomePage;","import React, { Component } from 'react';\nimport axios from \"axios\";\nclass RestClient  {\n\n\n\n    // static GetRequest(getUrl) {\n    //     return axios\n    //        .get(getUrl)\n    //        .then(function (response) {\n    //          // handle success\n    //          console.log(response);\n     \n    //          return response.data;\n    //        })\n    //        .catch(function (error) {\n    //          // handle error\n    //          console.log(error);\n    //          return null;\n    //        });\n    //    }\n\n\n    static PostRequest(postURL,postJsondata) {\n\n        let config={\n          headers: {'Content-Type': 'application/x-www-form-urlencoded',}\n      }\n    \n      console.log(postURL)\n      console.log(postJsondata)\n    \n        return axios\n           .post(postURL,postJsondata,config)\n           .then(function (response) {\n             // handle success\n             console.log(response);\n     \n             return response.data;\n           })\n           .catch(function (error) {\n             // handle error\n             console.log(error);\n             return null;\n           });\n       }\n\n\n\n\n    \n}\n\nexport default RestClient;","import React, { Component } from \"react\";\n\nclass AppUrl {\n\n  static baseUrl = \"http://saifulcse.tk/siteapitest/\";\n  //static baseUrl = \"https://siteapi.sptv.info/\";\n\n   static login= this.baseUrl +\"onLogin\";\n   static signup= this.baseUrl+\"createUserInfoModel\";\n   static  updateUserInfoModel = this.baseUrl+\"updateUserInfoModel\";\n   static  createDailyMeal = this.baseUrl+\"createDailyMeal\";\n   static  getDailyMealByDate = this.baseUrl+\"getDailyMealByDate\";\n   static  getAllUserApproveStatus = this.baseUrl+\"getAllUserApproveStatus\";\n   static  getAllApprovedUserList = this.baseUrl+\"getAllApprovedUserList\";\n   static  createDepositMoney = this.baseUrl+\"createDepositMoney\";\n   static  getDepositMoneyByYearMonth = this.baseUrl+\"getDepositMoneyByYearMonth?page=\";\n   static  getDepositMoneyByYearMonthAndUserID = this.baseUrl+\"getDepositMoneyByYearMonthAndUserID\";\n   static   getTotalDailyMealByDate = this.baseUrl+\"getTotalDailyMealByDate\";\n   static   getTotalMealByMonthAndUserID = this.baseUrl+\"getTotalMealByMonthAndUserID?page=\";\n   static   getTotalMealByMonth = this.baseUrl+\"getTotalMealByMonth?page=\";\n   static   getAllMessList = this.baseUrl+\"getAllMessList\";\n   static   createDailyCost = this.baseUrl+\"createDailyCost\";\n   static   getDailyCostByMonthAndUserID = this.baseUrl+\"getDailyCostByMonthAndUserID?page=\";\n   static   getTotalDailyCostByMonth = this.baseUrl+\"getTotalDailyCostByMonth\";\n   static   createPreviousMonth = this.baseUrl+\"createPreviousMonth\";\n   static   getPreviousMonthByMonth = this.baseUrl+\"getPreviousMonthByMonth?page=\";\n   static   getPreviousMonthByUserID = this.baseUrl+\"getPreviousMonthByUserID?page=\";\n\n\n}\n\nexport default AppUrl;\n","import React, { Component, Fragment } from \"react\";\nimport loading from '../../asset/image/loading.svg'\nimport { Container, Row, Col } from \"react-bootstrap\";\n\nclass Loading extends Component {\n  render() {\n    return (\n      <Fragment>\n        <Container className=\"text-center centered\">\n          <Row>\n            <Col>\n              <img className=\"loaderanimation\" src={loading}></img>\n            </Col>\n          </Row>\n        </Container>\n      </Fragment>\n    );\n  }\n}\n\nexport default Loading;\n","import React from 'react';\n\nconst ThisMonthYear = () => {\n\n    var montharray = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n    var dateObj = new Date();\n    var month = dateObj.getUTCMonth() + 1; //months from 1-12\n    var day = dateObj.getUTCDate();\n    var year = dateObj.getUTCFullYear();\n\n    return year + \"-\" + montharray[month-1];\n\n};\n\nexport default ThisMonthYear;","import React from 'react';\n\nconst TodayDate = () => {\n    var montharray = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n    var dateObj = new Date();\n    var month = dateObj.getUTCMonth() + 1; //months from 1-12\n    var day = dateObj.getUTCDate();\n    var year = dateObj.getUTCFullYear();\n\n    return  day+ \"-\" + montharray[month-1]+\"-\"+year;\n};\n\nexport default TodayDate;","import React, { Component, Fragment } from \"react\";\nimport Pagination from \"react-js-pagination\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { getToken, getUser } from \"../Common/Common\";\nimport RestClient from \"../RestApi/RestClient\";\nimport AppUrl from \"../RestApi/AppUrl\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport { Redirect } from \"react-router\";\nimport Loading from \"../Loading/Loading\";\nimport { Container, Row, Col, Button, Table, Form } from \"react-bootstrap\";\nimport ThisMonthYear from \"../Common/ThisMonthYear\";\nimport TodayDate from \"../Common/TodayDate\";\nimport Dropdown from \"react-dropdown\";\nimport \"react-dropdown/style.css\";\n\nclass AddOrRemoveContent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      current_page: 1,\n      total: 0,\n      per_page: 10,\n      addmemberList: [],\n      removeMemberList: [],\n      user: getUser(),\n      deleteshow: false,\n      editshow: false,\n      addshow: false,\n      loading: true,\n      selecteduser: \"\",\n      Option: [],\n      error: false,\n      selectedItem: {\n        id: 0,\n        cost: 0,\n        date: \"\",\n        user_id: 0,\n        yr_month: \"\",\n        mess_name: \"\",\n      },\n      loggedin: false,\n      access_token: \"\",\n    };\n  }\n\n  errorToast = (a) =>\n    toast.error(\"🦄 \" + a, {\n      position: \"top-right\",\n      autoClose: 5000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n    });\n  successToast = (a) =>\n    toast.success(\"🦄 \" + a, {\n      position: \"top-right\",\n      autoClose: 5000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n    });\n\n  componentDidMount() {\n    window.scroll(0, 0);\n    this.getAllUserApproveStatus(0);\n    this.getAllUserApproveStatus(1);\n  }\n\n  getAllUserApproveStatus(isAddmember) {\n    //this.setState({ loading: true });\n\n    console.log(ThisMonthYear());\n\n    const id = this.state.user[0].id;\n    const mess = this.state.user[0].mess_name;\n\n    let jsonObject = {\n      mess_name: mess,\n      approve: isAddmember,\n    };\n\n    RestClient.PostRequest(\n      AppUrl.getAllUserApproveStatus,\n      JSON.stringify(jsonObject)\n    )\n      .then((result) => {\n        if (result == null || result.success == \"0\") {\n          this.setState({ error: false, loading: false });\n\n          if (isAddmember == 0) {\n            this.setState({\n              addmemberList: [],\n\n              loading: false,\n              error: false,\n            });\n          } else {\n            this.setState({\n              removeMemberList: [],\n\n              loading: false,\n              error: false,\n            });\n          }\n        } else {\n          if (isAddmember == 0) {\n            this.setState({\n              addmemberList: result.data,\n\n              loading: false,\n              error: false,\n            });\n          } else {\n            this.setState({\n              removeMemberList: result.data,\n\n              loading: false,\n              error: false,\n            });\n          }\n        }\n      })\n      .catch((error) => {\n        this.setState({ error: true, loading: false });\n      });\n  }\n\n  RemoveMember = (data) => {\n    let jsonObject = {\n      id: data.id,\n      mess_name: data.mess_name,\n      manager: data.manager,\n      approve: 0,\n    };\n\n    RestClient.PostRequest(\n      AppUrl.updateUserInfoModel,\n      JSON.stringify(jsonObject)\n    )\n      .then((result) => {\n        if (result == null || result.success == \"0\") {\n          this.setState({ error: false, loading: false });\n        } else {\n          this.getAllUserApproveStatus(0);\n          this.getAllUserApproveStatus(1);\n        }\n      })\n      .catch((error) => {\n        this.setState({ error: true, loading: false });\n      });\n  };\n\n  AddMember = (data) => {\n    let jsonObject = {\n      id: data.id,\n      mess_name: data.mess_name,\n      manager: data.manager,\n      approve: 1,\n    };\n\n    RestClient.PostRequest(\n      AppUrl.updateUserInfoModel,\n      JSON.stringify(jsonObject)\n    )\n      .then((result) => {\n        if (result == null || result.success == \"0\") {\n          this.setState({ error: false, loading: false });\n        } else {\n          this.getAllUserApproveStatus(0);\n          this.getAllUserApproveStatus(1);\n        }\n      })\n      .catch((error) => {\n        this.setState({ error: true, loading: false });\n      });\n  };\n\n  render() {\n    const defaultOption = this.state.selecteduser;\n\n    if (getToken() == null) {\n      return <Redirect to=\"/login\"></Redirect>;\n    } else if (this.state.loading == true) {\n      return <Loading></Loading>;\n    } else if (this.state.error == false) {\n      const mylist = this.state.addmemberList;\n      const myview = mylist.map((myList1) => {\n        return (\n          <tr>\n            <td className=\"white\">{myList1.name}</td>\n\n            <td className=\"text-center\">\n              <Button\n                onClick={this.AddMember.bind(this, myList1)}\n                variant=\"success\"\n              >\n                Add\n              </Button>\n            </td>\n          </tr>\n        );\n      });\n\n      const mylist1 = this.state.removeMemberList;\n      const myview1 = mylist1.map((myList1) => {\n        return (\n          <tr>\n            <td className=\"white\">{myList1.name}</td>\n            <td className=\"text-center\">\n              <Button\n                onClick={this.RemoveMember.bind(this, myList1)}\n                variant=\"danger\"\n              >\n                Remove\n              </Button>\n            </td>\n          </tr>\n        );\n      });\n\n      return (\n        <Fragment>\n          <Container className=\"mt-5 mb-5\">\n            <Row>\n              <Col sm={12} md={6} lg={6}>\n                <ToastContainer />\n\n                <h3 className=\"white\">Add Member List</h3>\n                <Table striped bordered hover>\n                  <thead>\n                    <tr>\n                      <th className=\"darkorange\">Name</th>\n                    </tr>\n                  </thead>\n                  <tbody>{myview}</tbody>\n                </Table>\n              </Col>\n\n              <Col sm={12} md={6} lg={6}>\n                <h3 className=\"white\">Remove Member List</h3>\n                <Table striped bordered hover>\n                  <thead>\n                    <tr>\n                      <th className=\"darkorange\">Name</th>\n                    </tr>\n                  </thead>\n                  <tbody>{myview1}</tbody>\n                </Table>\n              </Col>\n            </Row>\n          </Container>\n        </Fragment>\n      );\n    }\n  }\n}\n\nexport default AddOrRemoveContent;\n","import React, { Component, Fragment } from \"react\";\nimport Navheader from \"../components/Navheader/Navheader\";\nimport AddOrRemoveContent from \"../components/AddOrRemoveContent/AddOrRemoveContent\";\nimport NavFooter from \"../components/Footer/NavFooter\";\n\nclass AddOrRemoveMember extends Component {\n  render() {\n    return (\n      <Fragment>\n        <Navheader></Navheader>\n        <AddOrRemoveContent></AddOrRemoveContent>\n        <NavFooter></NavFooter>\n      </Fragment>\n    );\n  }\n}\n\nexport default AddOrRemoveMember;\n","import React from 'react';\n\nconst GetMonthName = (number) => {\n\n    var montharray = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n    return  montharray[number - 1];\n};\n\nexport default GetMonthName;","import React, { Component, Fragment } from \"react\";\nimport Pagination from \"react-js-pagination\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { getToken, getUser } from \"../Common/Common\";\nimport RestClient from \"../RestApi/RestClient\";\nimport AppUrl from \"../RestApi/AppUrl\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport { Redirect } from \"react-router\";\nimport Loading from \"../Loading/Loading\";\nimport { Container, Row, Col, Button, Table, Form } from \"react-bootstrap\";\nimport ThisMonthYear from \"../Common/ThisMonthYear\";\nimport TodayDate from \"../Common/TodayDate\";\nimport Dropdown from \"react-dropdown\";\nimport \"react-dropdown/style.css\";\nimport YearMonthPicker from \"react-year-month-picker\";\nimport MonthYearPicker from \"react-month-year-picker\";\nimport YearPicker from \"react-year-picker\";\nimport MonthPickerInput from \"react-month-picker-input\";\nimport \"react-month-picker-input/dist/react-month-picker-input.css\";\n\nimport MonthPicker from \"@9softstudio/react-monthpicker\";\n\nimport \"@9softstudio/react-monthpicker/dist/reactmonthpicker.css\";\nimport GetMonthName from \"../Common/GetMonthName\";\n\nclass CalculateMealContent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      scheduled: null,\n      current_page: 1,\n      month: 12,\n      year: 2018,\n      total: 0,\n      per_page: 10,\n      data: [],\n      dailyMealArrayList: [],\n      depositAmountArrayList: [],\n      userInfoArrayList: [],\n      userlist: [],\n      user: getUser(),\n      deleteshow: false,\n      editshow: false,\n      addshow: false,\n      loading: false,\n      selecteduser: \"\",\n      yearMonth: \"\",\n      Option: [],\n      error: false,\n\n      TotalCostServer: \"\",\n      TotalmealServer: \"\",\n      Month: \"\",\n      MillRateServer: 0,\n      selectedItem: {\n        id: 0,\n        cost: 0,\n        date: \"\",\n        user_id: 0,\n        yr_month: \"\",\n        mess_name: \"\",\n      },\n      loggedin: false,\n      access_token: \"\",\n    };\n  }\n\n  handlePageChange(pageNumber) {\n    console.log(`active page is ${pageNumber}`);\n    this.setState({ current_page: pageNumber });\n    this.getAllPreviousMontdataFromServer(pageNumber);\n  }\n\n  errorToast = (a) =>\n    toast.error(\"🦄 \" + a, {\n      position: \"top-right\",\n      autoClose: 5000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n    });\n  successToast = (a) =>\n    toast.success(\"🦄 \" + a, {\n      position: \"top-right\",\n      autoClose: 5000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n    });\n\n  componentDidMount() {\n    window.scroll(0, 0);\n    this.getAllPreviousMontdataFromServer();\n    this.getTotalDailyCostByMonth();\n  }\n\n  getTotalDailyCostByMonth() {\n    console.log(ThisMonthYear());\n\n    const id = this.state.user[0].id;\n    const mess = this.state.user[0].mess_name;\n\n    const isAdmin = this.state.user[0].manager;\n\n    var url = \"\";\n\n    url = AppUrl.getTotalDailyCostByMonth;\n\n    console.log(id);\n    console.log(mess);\n\n    let jsonObject = {\n      mess_name: mess,\n      user_id: id,\n      yr_month: ThisMonthYear(),\n    };\n\n    RestClient.PostRequest(url, JSON.stringify(jsonObject))\n      .then((result) => {\n        if (result == null || result.success == \"0\") {\n          console.log(\"data\" + this.state.dailyMealArrayList);\n        } else {\n          console.log(\n            \"datafgdfgfgdffghdfhdfghdfgshfgshfgsthfsghfgshfghfghfghfgsh\" +\n              this.state.dailyMealArrayList\n          );\n\n          var millRate = 0;\n\n          if (result.totalmeal != null && result.totalmeal != 0) {\n            millRate = result.totalCost / result.totalmeal;\n          }\n\n          this.setState({\n            dailyMealArrayList: result.userMealList,\n            depositAmountArrayList: result.userDepositList,\n            TotalCostServer: result.totalCost,\n            TotalmealServer: result.totalmeal,\n            userInfoArrayList: result.approveuserList,\n            MillRateServer: millRate,\n            loading: false,\n            error: false,\n          });\n\n          console.log(\"data\" + this.state.dailyMealArrayList);\n        }\n      })\n      .catch((error) => {\n        console.log(\"data\" + this.state.dailyMealArrayList);\n      });\n  }\n\n  getAllPreviousMontdataFromServer(pageNumber = 1) {\n    console.log(ThisMonthYear());\n\n    const id = this.state.user[0].id;\n    const mess = this.state.user[0].mess_name;\n\n    const isAdmin = this.state.user[0].manager;\n\n    var url = \"\";\n\n    url = AppUrl.getPreviousMonthByMonth;\n\n    console.log(id);\n    console.log(mess);\n\n    let jsonObject = {\n      mess_name: mess,\n      user_id: id,\n      yr_month: ThisMonthYear(),\n    };\n\n    RestClient.PostRequest(url + pageNumber, JSON.stringify(jsonObject))\n      .then((result) => {\n        if (result == null || result.success == \"0\") {\n          this.setState({ error: false, loading: false });\n        } else {\n          this.setState({\n            data: result.data.data,\n            total: result.data.total,\n            per_page: result.data.per_page,\n            loading: false,\n            error: false,\n          });\n        }\n      })\n      .catch((error) => {\n        this.setState({ error: true, loading: false });\n      });\n  }\n\n  render() {\n    const defaultOption = this.state.selecteduser;\n\n    if (getToken() == null) {\n      return <Redirect to=\"/login\"></Redirect>;\n    } else if (this.state.loading == true) {\n      return <Loading></Loading>;\n    } else if (this.state.error == false) {\n      const mylist = this.state.data;\n      const myview = mylist.map((myList1) => {\n        return (\n          <tr>\n            <td className=\"white\">{myList1.name}</td>\n            <td className=\"white\">{myList1.meal_rate}</td>\n            <td className=\"white\">{myList1.total_deposit}</td>\n            <td className=\"white\">{myList1.total_cost}</td>\n            <td className=\"white\">{myList1.extra_money}</td>\n            <td className=\"white\">{myList1.given_money}</td>\n          </tr>\n        );\n      });\n\n      return (\n        <Fragment>\n          <Container className=\"mt-5 mb-5\">\n            <Row>\n              <Col className=\"text-center\" sm={12} md={12} lg={6}>\n                <h5 className=\"white\">Total Cost:- {this.state.TotalCostServer}</h5>\n                <h5 className=\"white\">Month:- {ThisMonthYear()}</h5>\n                <h5 className=\"white\">Total Meal:- {this.state.TotalmealServer}</h5>\n                <h5 className=\"white\">Mill Rate:- {Math.round(this.state.MillRateServer)}</h5>\n              </Col>\n\n              <Col sm={12} md={12} lg={6}>\n                <Button variant=\"primary\" onClick={this.onAddDailyCost}>\n                  Upload Meal Rate\n                </Button>\n              </Col>\n            </Row>\n\n            <br></br>\n            <br></br>\n            <Row>\n              <Col sm={12} md={12} lg={12}>\n                <ToastContainer />\n\n                <Table striped bordered hover>\n                  <thead>\n                    <tr>\n                      <th className=\"darkorange\">Name</th>\n                      <th className=\"darkorange\">MealRate</th>\n                      <th className=\"darkorange\">Deposit</th>\n                      <th className=\"darkorange\">Cost</th>\n                      <th className=\"darkorange\">Extra</th>\n                      <th className=\"darkorange\">Give</th>\n                    </tr>\n                  </thead>\n                  <tbody>{myview}</tbody>\n                </Table>\n\n                <Pagination\n                  activePage={this.state.current_page}\n                  itemsCountPerPage={this.state.per_page}\n                  totalItemsCount={this.state.total}\n                  pageRangeDisplayed={10}\n                  itemClass=\"page-item\"\n                  linkClass=\"page-link\"\n                  firstPageText=\"First\"\n                  lastPageText=\"Last\"\n                  nextPageText=\"Next\"\n                  prevPageText=\"Prev\"\n                  onChange={this.handlePageChange.bind(this)}\n                />\n              </Col>\n            </Row>\n          </Container>\n        </Fragment>\n      );\n    }\n  }\n}\n\nexport default CalculateMealContent;\n","import React, { Component, Fragment } from \"react\";\nimport Navheader from \"../components/Navheader/Navheader\";\nimport NavFooter from \"../components/Footer/NavFooter\";\nimport CalculateMealContent from \"../components/CalculateMealContent/CalculateMealContent\";\n\nclass CalculateMeal extends Component {\n  render() {\n    return (\n      <Fragment>\n        <Navheader></Navheader>\n        <CalculateMealContent></CalculateMealContent>\n        <NavFooter></NavFooter>\n      </Fragment>\n    );\n  }\n}\n\nexport default CalculateMeal;\n","import React, { Component, Fragment } from \"react\";\nimport Pagination from \"react-js-pagination\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { getToken, getUser } from \"../Common/Common\";\nimport RestClient from \"../RestApi/RestClient\";\nimport AppUrl from \"../RestApi/AppUrl\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport { Redirect } from \"react-router\";\nimport Loading from \"../Loading/Loading\";\nimport { Container, Row, Col, Button, Table, Form } from \"react-bootstrap\";\nimport ThisMonthYear from \"../Common/ThisMonthYear\";\nimport TodayDate from \"../Common/TodayDate\";\n\nclass DailyCostContent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      current_page: 1,\n      total: 0,\n      per_page: 10,\n      data: [],\n      user: getUser(),\n      deleteshow: false,\n      editshow: false,\n      addshow: false,\n      loading: true,\n      error: false,\n      selectedItem: {\n        id: 0,\n        cost: 0,\n        date: \"\",\n        user_id: 0,\n        yr_month: \"\",\n        mess_name: \"\",\n      },\n      loggedin: false,\n      access_token: \"\",\n    };\n\n   \n  }\n\n  componentDidMount() {\n    window.scroll(0, 0);\n    this.getDailyCostByMonth();\n  }\n\n  handlePageChange(pageNumber) {\n    console.log(`active page is ${pageNumber}`);\n    this.setState({ current_page: pageNumber });\n    this.getDailyCostByMonth(pageNumber);\n  }\n\n  getDailyCostByMonth(pageNumber = 1) {\n    //this.setState({ loading: true });\n\n    console.log(ThisMonthYear());\n\n    const id = this.state.user[0].id;\n    const mess = this.state.user[0].mess_name;\n\n    console.log(id);\n    console.log(mess);\n\n    let jsonObject = {\n      user_id: id,\n      mess_name: mess,\n      yr_month: ThisMonthYear(),\n    };\n\n    RestClient.PostRequest(\n      AppUrl.getDailyCostByMonthAndUserID + pageNumber,\n      JSON.stringify(jsonObject)\n    )\n      .then((result) => {\n        if (result == null || result.success == \"0\") {\n          this.setState({ error: false, loading: false });\n        } else {\n          this.setState({\n            data: result.data.data,\n            total: result.data.total,\n            per_page: result.data.per_page,\n            loading: false,\n            error: false,\n          });\n        }\n      })\n      .catch((error) => {\n        this.setState({ error: true, loading: false });\n      });\n  }\n\n  errorToast = (a) =>\n    toast.error(\"🦄 \" + a, {\n      position: \"top-right\",\n      autoClose: 5000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n    });\n  successToast = (a) =>\n    toast.success(\"🦄 \" + a, {\n      position: \"top-right\",\n      autoClose: 5000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n    });\n\n\n    onAddDailyCost = (e) =>{\n\n        e.preventDefault();\n    \n        let amount = document.getElementById(\"amount\").value;\n\n        if (amount != null && amount.length == 0) {\n            return this.errorToast(\"Please write daily cost\");\n          }\n\n\n    //this.setState({ loading: true });\n\n    console.log(ThisMonthYear());\n\n    const id = this.state.user[0].id;\n    const mess = this.state.user[0].mess_name;\n\n    console.log(id);\n    console.log(mess);\n\n    let jsonObject = {\n      user_id: id,\n      cost: amount,\n      date: TodayDate(),\n      mess_name: mess,\n      yr_month: ThisMonthYear(),\n    };\n\n    RestClient.PostRequest(\n      AppUrl.createDailyCost,\n      JSON.stringify(jsonObject)\n    )\n      .then((result) => {\n        if (result == null || result.success == \"0\") {\n          this.setState({ error: false, loading: false });\n          this.errorToast(\"Daily cost added failed\");\n        } else {\n           \n          this.setState({\n            loading: false,\n            error: false,\n          });\n\n          this.successToast(\"Daily cost added successfully\");\n\n         \n\n         this.getDailyCostByMonth();\n\n\n        }\n      })\n      .catch((error) => {\n        this.setState({ error: true, loading: false });\n      });\n\n\n      e.preventDefault();\n     \n\n    }\n\n\n\n  render() {\n    if (getToken() == null) {\n      return <Redirect to=\"/login\"></Redirect>;\n    } else if (this.state.loading == true) {\n      return <Loading></Loading>;\n    } else if (this.state.error == false) {\n      const mylist = this.state.data;\n      const myview = mylist.map((myList1) => {\n        return (\n          <tr>\n            <td className=\"white\">{myList1.date}</td>\n            <td className=\"white\">{myList1.cost}</td>\n\n            {/* <td className=\"text-center\">\n                    <Button\n                      onClick={this.editRow.bind(this, myList1)}\n                      variant=\"primary\"\n                    >\n                      Edit\n                    </Button>\n                  </td>\n                  <td className=\"text-center\">\n                    <Button\n                      onClick={this.deleteRow.bind(this, myList1)}\n                      variant=\"danger\"\n                    >\n                      Delete\n                    </Button>\n                  </td> */}\n          </tr>\n        );\n      });\n\n      return (\n        <Fragment>\n          <Container className=\"mt-5 mb-5\">\n            <Row >\n              <Col sm={12} md={12} lg={12}>\n                <Form>\n                  <Row>\n                    <Col>\n                      <Form.Control  id=\"amount\" type=\"text\" placeholder=\"Write Amount\" />\n                    </Col>\n                    <Col>\n                    <Button variant=\"primary\" onClick={this.onAddDailyCost}>Add Cost</Button>\n                    </Col>\n                  </Row>\n                </Form>\n                <br></br>\n\n                <ToastContainer />\n\n                <Table striped bordered hover>\n                  <thead>\n                    <tr>\n                      <th className=\"darkorange\">Date</th>\n                      <th className=\"darkorange\">Amount</th>\n                    </tr>\n                  </thead>\n                  <tbody>{myview}</tbody>\n                </Table>\n\n                <Pagination\n                  activePage={this.state.current_page}\n                  itemsCountPerPage={this.state.per_page}\n                  totalItemsCount={this.state.total}\n                  pageRangeDisplayed={10}\n                  itemClass=\"page-item\"\n                  linkClass=\"page-link\"\n                  firstPageText=\"First\"\n                  lastPageText=\"Last\"\n                  nextPageText=\"Next\"\n                  prevPageText=\"Prev\"\n                  onChange={this.handlePageChange.bind(this)}\n                />\n              </Col>\n            </Row>\n          </Container>\n        </Fragment>\n      );\n    }\n  }\n}\n\nexport default DailyCostContent;\n","import React, { Component, Fragment } from \"react\";\nimport Navheader from \"../components/Navheader/Navheader\";\nimport DailyCostContent from \"../components/DailyCostContent/DailyCostContent\";\nimport NavFooter from \"../components/Footer/NavFooter\";\n\nclass DailyCost extends Component {\n  render() {\n    return (\n      <Fragment>\n        <Navheader></Navheader>\n        <DailyCostContent></DailyCostContent>\n        <NavFooter></NavFooter>\n      </Fragment>\n    );\n  }\n}\n\nexport default DailyCost;\n","import React, { Component, Fragment } from \"react\";\nimport Pagination from \"react-js-pagination\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { getToken, getUser } from \"../Common/Common\";\nimport RestClient from \"../RestApi/RestClient\";\nimport AppUrl from \"../RestApi/AppUrl\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport { Redirect } from \"react-router\";\nimport Loading from \"../Loading/Loading\";\nimport { Container, Row, Col, Button, Table, Form } from \"react-bootstrap\";\nimport ThisMonthYear from \"../Common/ThisMonthYear\";\nimport TodayDate from \"../Common/TodayDate\";\nimport Dropdown from 'react-dropdown';\nimport 'react-dropdown/style.css';\n\nclass DepositMoneyContent extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n          current_page: 1,\n          total: 0,\n          per_page: 10,\n          data: [],\n          userlist: [],\n          user: getUser(),\n          deleteshow: false,\n          editshow: false,\n          addshow: false,\n          loading: true,\n          selecteduser: '',\n          Option: [],\n          error: false,\n          selectedItem: {\n            id: 0,\n            cost: 0,\n            date: \"\",\n            user_id: 0,\n            yr_month: \"\",\n            mess_name: \"\",\n          },\n          loggedin: false,\n          access_token: \"\",\n        };\n        this._onSelect = this._onSelect.bind(this)\n       \n      }\n\n      errorToast = (a) =>\n      toast.error(\"🦄 \" + a, {\n        position: \"top-right\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      });\n    successToast = (a) =>\n      toast.success(\"🦄 \" + a, {\n        position: \"top-right\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      });\n    \n\n\n\ncomponentDidMount() {\n  window.scroll(0, 0);\n    const isAdmin = this.state.user[0].manager;\n\n    if(isAdmin==1) {\n        this.getUserList();\n        this.getAllDepositAmountFromServer();\n    }else{\n\n        //this.getAlldepositAmountByUserIDFromServer();\n    }\n\n  }\n\n  handlePageChange(pageNumber) {\n    console.log(`active page is ${pageNumber}`);\n    this.setState({ current_page: pageNumber });\n    this.getDailyCostByMonth(pageNumber);\n  }\n\n\n  getUserList() {\n    //this.setState({ loading: true });\n\n \n    const mess = this.state.user[0].mess_name;\n\n\n    let jsonObject = {\n      mess_name: mess,\n    };\n\n    RestClient.PostRequest(\n      AppUrl.getAllApprovedUserList,\n      JSON.stringify(jsonObject)\n    )\n      .then((result) => {\n        if (result == null || result.success == \"0\") {\n          \n        } else {\n          this.setState({\n            userlist: result.data,\n          });\n\n          \n          \n          if(this.state.userlist.length>0){\n              for(let item of this.state.userlist){\n                  console.log(item.name)\n                  this.state.Option.push(item.name);\n              }\n              //this.state.defaultOption = this.state.Option[0];\n              //this.setState({selecteduser: this.state.defaultOption})\n          }\n\n\n        }\n      })\n      .catch((error) => {\n        \n      });\n  }\n\n\n  _onSelect = (option)=>{\n    console.log('You selected ', option)\n    this.setState({selecteduser: option.label})\n    console.log('You selected ', this.state.selecteduser)\n\n  }\n\n\n  // _onSelect (option) {\n    \n  //   //this.setState({selecteduser: option.value})\n  //   //console.log('You selected ', this.state.selecteduser)\n\n  // }\n\n\n  getAlldepositAmountByUserIDFromServer(pageNumber = 1) {\n    //this.setState({ loading: true });\n\n    console.log(ThisMonthYear());\n\n    const id = this.state.user[0].id;\n    const mess = this.state.user[0].mess_name;\n\n    console.log(id);\n    console.log(mess);\n\n    let jsonObject = {\n      mess_name: mess,\n      user_id:id,\n      yr_month: ThisMonthYear(),\n    };\n\n    RestClient.PostRequest(\n      AppUrl.getDepositMoneyByYearMonthAndUserID + pageNumber,\n      JSON.stringify(jsonObject)\n    )\n      .then((result) => {\n        if (result == null || result.success == \"0\") {\n          this.setState({ error: false, loading: false });\n        } else {\n          this.setState({\n            data: result.data.data,\n            total: result.data.total,\n            per_page: result.data.per_page,\n            loading: false,\n            error: false,\n          });\n        }\n      })\n      .catch((error) => {\n        this.setState({ error: true, loading: false });\n      });\n  }\n\n\n  getAllDepositAmountFromServer(pageNumber = 1) {\n    //this.setState({ loading: true });\n\n    console.log(ThisMonthYear());\n\n    const id = this.state.user[0].id;\n    const mess = this.state.user[0].mess_name;\n\n    console.log(id);\n    console.log(mess);\n\n    let jsonObject = {\n      mess_name: mess,\n      yr_month: ThisMonthYear(),\n    };\n\n    RestClient.PostRequest(\n      AppUrl.getDepositMoneyByYearMonth + pageNumber,\n      JSON.stringify(jsonObject)\n    )\n      .then((result) => {\n        if (result == null || result.success == \"0\") {\n          this.setState({ error: false, loading: false });\n        } else {\n          this.setState({\n            data: result.data.data,\n            total: result.data.total,\n            per_page: result.data.per_page,\n            loading: false,\n            error: false,\n          });\n        }\n      })\n      .catch((error) => {\n        this.setState({ error: true, loading: false });\n      });\n  }\n\n  onAddDailyCost = (e) =>{\n\n    e.preventDefault();\n\n    let amount = document.getElementById(\"amount\").value;\n\n    if(this.state.selecteduser == ''){\n      return this.errorToast(\"Please select user\");\n    }\n    \n    if (amount != null && amount.length == 0) {\n        return this.errorToast(\"Please write deposit amount\");\n      }\n\n     \n\n\n//this.setState({ loading: true });\n\nconsole.log(ThisMonthYear());\n\nvar id = 0;\n\nif(this.state.userlist.length>0){\n  for(let item of this.state.userlist){\n      console.log(item.name)\n      if(this.state.selecteduser == item.name){\n        id=item.id;\n      }\n  }\n  \n}\n\nconst mess = this.state.user[0].mess_name;\n\nconsole.log(id);\nconsole.log(mess);\n\nlet jsonObject = {\n  user_id: id,\n  amount: amount,\n  creation_date: TodayDate(),\n  mess_name: mess,\n  yr_month: ThisMonthYear(),\n};\n\nRestClient.PostRequest(\n  AppUrl.createDepositMoney,\n  JSON.stringify(jsonObject)\n)\n  .then((result) => {\n    if (result == null || result.success == \"0\") {\n      this.setState({ error: false, loading: false });\n      this.errorToast(\"Daily cost added failed\");\n    } else {\n       \n      this.setState({\n        loading: false,\n        error: false,\n      });\n\n      this.successToast(\"Deposit Money added successfully\");\n\n      document.getElementById(\"amount\").value = \"\";\n      \n\n     this.getAllDepositAmountFromServer();\n\n\n    }\n  })\n  .catch((error) => {\n    this.setState({ error: true, loading: false });\n  });\n\n\n  e.preventDefault();\n \n\n}\n\n\n\n\n\n\n      render() {\n        const defaultOption = this.state.selecteduser\n\n        if (getToken() == null) {\n          return <Redirect to=\"/login\"></Redirect>;\n        } else if (this.state.loading == true) {\n          return <Loading></Loading>;\n        } else if (this.state.error == false) {\n          const mylist = this.state.data;\n          const myview = mylist.map((myList1) => {\n            return (\n              <tr>\n                <td className=\"white\">{myList1.name}</td>\n                <td className=\"white\">{myList1.creation_date}</td>\n                <td className=\"white\">{myList1.amount}</td>\n  \n              </tr>\n            );\n          });\n    \n          return (\n            <Fragment>\n              <Container className=\"mt-5 mb-5\">\n                <Row>\n                  <Col sm={12} md={12} lg={12}>\n                    <Form>\n                      <Row>\n                      <Col>\n\n          \n                      <Dropdown options={this.state.Option} onChange={this._onSelect} value={defaultOption} placeholder=\"Select an user\" />\n                        </Col>\n                        <Col>\n                          <Form.Control  id=\"amount\" type=\"text\" placeholder=\"Write Amount\" />\n                        </Col>\n                        <Col>\n                        <Button variant=\"primary\" onClick={this.onAddDailyCost}>Deposit Money</Button>\n                        </Col>\n                      </Row>\n                    </Form>\n                    <br></br>\n    \n                    <ToastContainer />\n    \n                    <Table striped bordered hover>\n                      <thead>\n                        <tr>\n                        <th className=\"darkorange\">Name</th>\n                          <th className=\"darkorange\">Date</th>\n                          <th className=\"darkorange\">Amount</th>\n                        </tr>\n                      </thead>\n                      <tbody>{myview}</tbody>\n                    </Table>\n    \n                    <Pagination\n                      activePage={this.state.current_page}\n                      itemsCountPerPage={this.state.per_page}\n                      totalItemsCount={this.state.total}\n                      pageRangeDisplayed={10}\n                      itemClass=\"page-item\"\n                      linkClass=\"page-link\"\n                      firstPageText=\"First\"\n                      lastPageText=\"Last\"\n                      nextPageText=\"Next\"\n                      prevPageText=\"Prev\"\n                      onChange={this.handlePageChange.bind(this)}\n                    />\n                  </Col>\n                </Row>\n              </Container>\n            </Fragment>\n          );\n        }\n      }\n}\n\nexport default DepositMoneyContent;","import React, { Component, Fragment } from \"react\";\nimport Navheader from \"../components/Navheader/Navheader\";\nimport DepositMoneyContent from \"../components/DepositMoneyContent/DepositMoneyContent\";\nimport NavFooter from \"../components/Footer/NavFooter\";\n\nclass DepositPage extends Component {\n  render() {\n    return (\n      <Fragment>\n        <Navheader></Navheader>\n        <DepositMoneyContent></DepositMoneyContent>\n        <NavFooter></NavFooter>\n      </Fragment>\n    );\n  }\n}\n\nexport default DepositPage;\n","import React, { Component, Fragment } from \"react\";\nimport {\n  Container,\n  Col,\n  Row,\n  Form,\n  Button,\n  Card,\n  NavLink,\n} from \"react-bootstrap\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport RestClient from \"../components/RestApi/RestClient\";\nimport AppUrl from \"../components/RestApi/AppUrl\";\nimport { setUserSession, getToken } from \"../components/Common/Common\";\nimport '../css/custom.css'\n\nclass LoginPage extends Component {\n  constructor() {\n    super();\n    this.state = {\n      mydata: [],\n      loading: false,\n      error: false,\n      message: \"\",\n      loggedin: false,\n    };\n\n    this.OnRegister = this.OnRegister.bind(this);\n  }\n\n  componentDidMount() {\n    window.scroll(0, 0);\n    //removeUserSession();\n  }\n\n  errorToast = (a) =>\n    toast.error(\"🦄 \" + a, {\n      position: \"top-right\",\n      autoClose: 5000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n    });\n  successToast = (a) =>\n    toast.success(\"🦄 \" + a, {\n      position: \"top-right\",\n      autoClose: 5000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n      logout: false,\n    });\n\n  onLoginClick = (e) => {\n    e.preventDefault();\n\n    let email = document.getElementById(\"email\").value;\n    let password = document.getElementById(\"password\").value;\n\n    if (email != null && email.length == 0) {\n      return this.errorToast(\"Please write email address\");\n    }\n\n    if (password != null && password.length == 0) {\n      return this.errorToast(\"Please write password\");\n    }\n\n    this.setState({ loading: true });\n\n    let jsonObject = { mail: email, password: password };\n    console.log(jsonObject);\n    RestClient.PostRequest(AppUrl.login, JSON.stringify(jsonObject))\n      .then((result) => {\n        console.log(result);\n        if (result == null) {\n          this.setState({ error: true, loading: false, loggedin: false });\n        } else if (result.success == \"0\") {\n          this.setState({ error: false, loading: false, loggedin: false });\n          this.setState({ message: \"No account found on server\" });\n          this.errorToast(\"No account found on server\");\n          // alert(\"No account found on server\");\n        } else {\n          this.setState({ mydata: result.data, loading: false, error: false });\n          this.successToast(\"Logged in Successfully\");\n          setUserSession(result.data, result.data);\n          // this.props.history.push(\"/home\");\n          //<Redirect to=\"/login\"></Redirect>\n          this.setState({ message: \"Logged in Successfully\" });\n\n          this.setState({ loggedin: true });\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n        this.setState({ error: true, loading: false });\n      });\n\n    e.preventDefault();\n  };\n\n  OnRegister = () => {\n    console.log(\"clicked\");\n\n    return <Redirect to=\"/Register\"></Redirect>;\n  };\n\n  render() {\n    if (getToken() != null) {\n      return <Redirect to=\"/\"></Redirect>;\n    } else if (this.state.loggedin == true) {\n      return <Redirect to=\"/\"></Redirect>;\n    } else {\n      return (\n        <Fragment>\n          {/* <h1 className=\"text-cdfdsenter mt-5 logintext\">Speaking Audios</h1> */}\n\n          {/* <Typical\n                steps={[\"Hello\", 1000, \"Hello world!\", 500]}\n                loop={Infinity}\n                wrapper=\"p\"\n              /> */}\n          <Container className=\"centered\">\n            <Row >\n              <Col sm={12} md={12} lg={12}>\n                <ToastContainer />\n                <Card\n                  className=\"shadow-lg p-3 mb-5 bg-white rounded\"\n                  style={{ width: \"25rem\" }}\n                >\n                  <Card.Body>\n                    <Card.Title>\n                      <h3>Mess Managment</h3>\n                    </Card.Title>\n                    <br></br>\n                    <Form onSubmit={this.onLoginClick}>\n                      <Form.Group>\n                        <Form.Label>Email</Form.Label>\n                        <Form.Control\n                          id=\"email\"\n                          type=\"text\"\n                          placeholder=\"Enter your email\"\n                        />\n                      </Form.Group>\n\n                      <Form.Group>\n                        <Form.Label>Password</Form.Label>\n                        <Form.Control\n                          id=\"password\"\n                          type=\"password\"\n                          placeholder=\"Enter your password\"\n                        />\n                      </Form.Group>\n                      <Button\n                        className=\"btn-block\"\n                        type=\"submit\"\n                        variant=\"primary\"\n                      >\n                        Login\n                      </Button>\n                    </Form>\n\n                    <br></br>\n                    <h5 className=\"darkorange\">Don't you have account?</h5>\n\n                    {/* <Button\n                      className=\"btn-block\"\n                      variant=\"primary\"\n                      onClick={this.OnRegister.bind(this)}\n                    >\n                      Register\n                    </Button> */}\n\n                    <Link to=\"/Register\" className=\"btn btn-block btn-primary\">\n                    Register\n                    </Link>\n                  </Card.Body>\n                </Card>\n\n                <h1 className=\"darkorange text-center\">{this.state.message}</h1>\n              </Col>\n            </Row>\n          </Container>\n        </Fragment>\n      );\n    }\n  }\n}\n\nexport default LoginPage;\n","import React, { Component, Fragment } from \"react\";\nimport Pagination from \"react-js-pagination\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { getToken, getUser } from \"../Common/Common\";\nimport RestClient from \"../RestApi/RestClient\";\nimport AppUrl from \"../RestApi/AppUrl\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport { Redirect } from \"react-router\";\nimport Loading from \"../Loading/Loading\";\nimport { Container, Row, Col, Button, Table, Form } from \"react-bootstrap\";\nimport ThisMonthYear from \"../Common/ThisMonthYear\";\nimport TodayDate from \"../Common/TodayDate\";\nimport Dropdown from \"react-dropdown\";\nimport \"react-dropdown/style.css\";\nimport YearMonthPicker from \"react-year-month-picker\";\nimport MonthYearPicker from \"react-month-year-picker\";\nimport YearPicker from \"react-year-picker\";\nimport MonthPickerInput from \"react-month-picker-input\";\nimport \"react-month-picker-input/dist/react-month-picker-input.css\";\n\nimport MonthPicker from \"@9softstudio/react-monthpicker\";\n\nimport \"@9softstudio/react-monthpicker/dist/reactmonthpicker.css\";\nimport GetMonthName from \"../Common/GetMonthName\";\n\nclass PreviousMonthContent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      scheduled: null,\n      current_page: 1,\n      month: 12,\n      year: 2018,\n      total: 0,\n      per_page: 10,\n      data: [],\n      userlist: [],\n      user: getUser(),\n      deleteshow: false,\n      editshow: false,\n      addshow: false,\n      loading: false,\n      selecteduser: \"\",\n      yearMonth: \"\",\n      Option: [],\n      error: false,\n      selectedItem: {\n        id: 0,\n        cost: 0,\n        date: \"\",\n        user_id: 0,\n        yr_month: \"\",\n        mess_name: \"\",\n      },\n      loggedin: false,\n      access_token: \"\",\n    };\n\n  }\n\n\n  handlePageChange(pageNumber) {\n    console.log(`active page is ${pageNumber}`);\n    this.setState({ current_page: pageNumber });\n    this.getAllPreviousMontdataFromServer(pageNumber);\n  }\n\n\n  errorToast = (a) =>\n    toast.error(\"🦄 \" + a, {\n      position: \"top-right\",\n      autoClose: 5000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n    });\n  successToast = (a) =>\n    toast.success(\"🦄 \" + a, {\n      position: \"top-right\",\n      autoClose: 5000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n    });\n\n    componentDidMount() {\n      window.scroll(0, 0);\n        \n    \n      }\n\n  getAllPreviousMontdataFromServer(pageNumber = 1) {\n\n\n    this.setState({ loading: true });\n\n    console.log(ThisMonthYear());\n\n    const id = this.state.user[0].id;\n    const mess = this.state.user[0].mess_name;\n    \n    const isAdmin = this.state.user[0].manager;\n\n    var url = \"\";\n\n    if(isAdmin==1) {\n      url = AppUrl.getPreviousMonthByMonth\n    }else{\n      url = AppUrl.getPreviousMonthByUserID\n       \n    }\n\n    console.log(id);\n    console.log(mess);\n\n    let jsonObject = {\n      mess_name: mess,\n      user_id: id,\n      yr_month: this.state.yearMonth,\n    };\n\n\n\n    RestClient.PostRequest(\n      url + pageNumber,\n      JSON.stringify(jsonObject)\n    )\n      .then((result) => {\n        if (result == null || result.success == \"0\") {\n          this.setState({ error: false, loading: false });\n        } else {\n          this.setState({\n            data: result.data.data,\n            total: result.data.total,\n            per_page: result.data.per_page,\n            loading: false,\n            error: false,\n          });\n        }\n      })\n      .catch((error) => {\n        this.setState({ error: true, loading: false });\n      });\n  }\n\n  handleSelect = (month, year) => {\n\n    this.setState({yearMonth: year+\"-\"+GetMonthName(month)})\n    //console.log(GetMonthName(month),year)\n    //console.log(this.state.yearMonth);\n  };\n\n  onLoadData=()=>{\n\n    if (this.state.yearMonth == \"\") {\n      return this.errorToast(\"Please select Year & Month\");\n    }\n\n    this.getAllPreviousMontdataFromServer()\n\n  }\n\n  render() {\n    const defaultOption = this.state.selecteduser;\n\n    if (getToken() == null) {\n      return <Redirect to=\"/login\"></Redirect>;\n    } else if (this.state.loading == true) {\n      return <Loading></Loading>;\n    } else if (this.state.error == false) {\n      const mylist = this.state.data;\n      const myview = mylist.map((myList1) => {\n        return (\n          <tr>\n            <td className=\"white\">{myList1.name}</td>\n            <td className=\"white\">{myList1.meal_rate}</td>\n            <td className=\"white\">{myList1.total_deposit}</td>\n            <td className=\"white\">{myList1.total_cost}</td>\n            <td className=\"white\">{myList1.extra_money}</td>\n            <td className=\"white\">{myList1.given_money}</td>\n          </tr>\n        );\n      });\n\n      return (\n        <Fragment>\n          <Container className=\"mt-5 mb-5\">\n            <Row>\n              <Col sm={12} md={12} lg={12}>\n                <Form>\n                  <Row>\n                    <Col>\n                      <MonthPicker onSelect={this.handleSelect} />\n                    </Col>\n\n                    <Col>\n                      <Button variant=\"primary\" onClick={this.onLoadData}>\n                        Load Data\n                      </Button>\n                    </Col>\n                  </Row>\n                </Form>\n                <br></br>\n\n                <ToastContainer />\n\n                <Table striped bordered hover>\n                  <thead>\n                    <tr>\n                      <th className=\"darkorange\">Name</th>\n                      <th className=\"darkorange\">MealRate</th>\n                      <th className=\"darkorange\">Deposit</th>\n                      <th className=\"darkorange\">Cost</th>\n                      <th className=\"darkorange\">Extra</th>\n                      <th className=\"darkorange\">Give</th>\n                    </tr>\n                  </thead>\n                  <tbody>{myview}</tbody>\n                </Table>\n\n                <Pagination\n                  activePage={this.state.current_page}\n                  itemsCountPerPage={this.state.per_page}\n                  totalItemsCount={this.state.total}\n                  pageRangeDisplayed={10}\n                  itemClass=\"page-item\"\n                  linkClass=\"page-link\"\n                  firstPageText=\"First\"\n                  lastPageText=\"Last\"\n                  nextPageText=\"Next\"\n                  prevPageText=\"Prev\"\n                  onChange={this.handlePageChange.bind(this)}\n                />\n              </Col>\n            </Row>\n          </Container>\n        </Fragment>\n      );\n    }\n  }\n}\n\nexport default PreviousMonthContent;\n","import React, { Component, Fragment } from \"react\";\nimport Navheader from \"../components/Navheader/Navheader\";\nimport PreviousMonthContent from \"../components/PreviousMonthContent/PreviousMonthContent\";\nimport NavFooter from \"../components/Footer/NavFooter\";\n\nclass PreviousMonth extends Component {\n  render() {\n    return (\n      <Fragment>\n        <Navheader></Navheader>\n        <PreviousMonthContent></PreviousMonthContent>\n        <NavFooter></NavFooter>\n      </Fragment>\n    );\n  }\n}\n\nexport default PreviousMonth;\n","import React, { Component, Fragment } from 'react';\n\nclass RegisterPage extends Component {\n    render() {\n        return (\n            <Fragment>\n                \n            </Fragment>\n        );\n    }\n}\n\nexport default RegisterPage;","import React, { Component, Fragment } from \"react\";\nimport Pagination from \"react-js-pagination\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { getToken, getUser } from \"../Common/Common\";\nimport RestClient from \"../RestApi/RestClient\";\nimport AppUrl from \"../RestApi/AppUrl\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport { Redirect } from \"react-router\";\nimport Loading from \"../Loading/Loading\";\nimport { Container, Row, Col, Button, Table, Form } from \"react-bootstrap\";\nimport ThisMonthYear from \"../Common/ThisMonthYear\";\nimport TodayDate from \"../Common/TodayDate\";\nimport Dropdown from 'react-dropdown';\nimport 'react-dropdown/style.css';\n\nclass TotalMealContent extends Component {\n\n\n    constructor(props) {\n        super(props);\n        this.state = {\n          current_page: 1,\n          total: 0,\n          per_page: 10,\n          data: [],\n          userlist: [],\n          user: getUser(),\n          deleteshow: false,\n          editshow: false,\n          addshow: false,\n          loading: true,\n          selecteduser: '',\n          Option: [],\n          error: false,\n          selectedItem: {\n            id: 0,\n            cost: 0,\n            date: \"\",\n            user_id: 0,\n            yr_month: \"\",\n            mess_name: \"\",\n          },\n          loggedin: false,\n          access_token: \"\",\n        };\n        \n       \n      }\n\n\n      errorToast = (a) =>\n      toast.error(\"🦄 \" + a, {\n        position: \"top-right\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      });\n    successToast = (a) =>\n      toast.success(\"🦄 \" + a, {\n        position: \"top-right\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      });\n    \n\n\n      componentDidMount() {\n        window.scroll(0, 0);\n        const isAdmin = this.state.user[0].manager;\n    \n        if(isAdmin==0) {\n           \n            this.getTotalMealByMonthAndUserID();\n\n        }else{\n    \n            this.getTotalMealByMonth();\n        }\n    \n      }\n\n\n      handlePageChange(pageNumber) {\n        console.log(`active page is ${pageNumber}`);\n        this.setState({ current_page: pageNumber });\n        this.getDailyCostByMonth(pageNumber);\n      }\n\n      getTotalMealByMonthAndUserID(pageNumber = 1) {\n        //this.setState({ loading: true });\n    \n        console.log(ThisMonthYear());\n    \n        const id = this.state.user[0].id;\n        const mess = this.state.user[0].mess_name;\n    \n        console.log(id);\n        console.log(mess);\n    \n        let jsonObject = {\n          mess_name: mess,\n          user_id:id,\n          yr_month: ThisMonthYear(),\n        };\n    \n        RestClient.PostRequest(\n          AppUrl.getTotalMealByMonthAndUserID + pageNumber,\n          JSON.stringify(jsonObject)\n        )\n          .then((result) => {\n            if (result == null || result.success == \"0\") {\n              this.setState({ error: false, loading: false });\n            } else {\n              this.setState({\n                data: result.data.data,\n                total: result.data.total,\n                per_page: result.data.per_page,\n                loading: false,\n                error: false,\n              });\n            }\n          })\n          .catch((error) => {\n            this.setState({ error: true, loading: false });\n          });\n      }\n\n\n      getTotalMealByMonth(pageNumber = 1) {\n        //this.setState({ loading: true });\n    \n        console.log(ThisMonthYear());\n    \n        const id = this.state.user[0].id;\n        const mess = this.state.user[0].mess_name;\n    \n        console.log(id);\n        console.log(mess);\n    \n        let jsonObject = {\n          mess_name: mess,\n          user_id:id,\n          yr_month: ThisMonthYear(),\n        };\n    \n        RestClient.PostRequest(\n          AppUrl.getTotalMealByMonth + pageNumber,\n          JSON.stringify(jsonObject)\n        )\n          .then((result) => {\n            if (result == null || result.success == \"0\") {\n              this.setState({ error: false, loading: false });\n            } else {\n              this.setState({\n                data: result.data.data,\n                total: result.data.total,\n                per_page: result.data.per_page,\n                loading: false,\n                error: false,\n              });\n            }\n          })\n          .catch((error) => {\n            this.setState({ error: true, loading: false });\n          });\n      }\n\n\n      render() {\n        const defaultOption = this.state.selecteduser\n\n        if (getToken() == null) {\n          return <Redirect to=\"/login\"></Redirect>;\n        } else if (this.state.loading == true) {\n          return <Loading></Loading>;\n        } else if (this.state.error == false) {\n          const mylist = this.state.data;\n          const myview = mylist.map((myList1) => {\n            return (\n              <tr>\n                <td className=\"white\">{myList1.name}</td>\n                <td className=\"white\">{myList1.creation_date}</td>\n                <td className=\"white\">{myList1.total_meal}</td>\n  \n              </tr>\n            );\n          });\n    \n          return (\n            <Fragment>\n              <Container className=\"mt-5 mb-5\">\n                <Row>\n                  <Col sm={12} md={12} lg={12}>\n                    \n                    <br></br>\n    \n                    <ToastContainer />\n    \n                    <Table striped bordered hover>\n                      <thead>\n                        <tr>\n                        <th className=\"darkorange\">Name</th>\n                          <th className=\"darkorange\">Date</th>\n                          <th className=\"darkorange\">Total Meal</th>\n                        </tr>\n                      </thead>\n                      <tbody>{myview}</tbody>\n                    </Table>\n    \n                    <Pagination\n                      activePage={this.state.current_page}\n                      itemsCountPerPage={this.state.per_page}\n                      totalItemsCount={this.state.total}\n                      pageRangeDisplayed={10}\n                      itemClass=\"page-item\"\n                      linkClass=\"page-link\"\n                      firstPageText=\"First\"\n                      lastPageText=\"Last\"\n                      nextPageText=\"Next\"\n                      prevPageText=\"Prev\"\n                      onChange={this.handlePageChange.bind(this)}\n                    />\n                  </Col>\n                </Row>\n              </Container>\n            </Fragment>\n          );\n        }\n      }\n}\n\nexport default TotalMealContent;","import React, { Component, Fragment } from \"react\";\nimport Navheader from \"../components/Navheader/Navheader\";\nimport TotalMealContent from \"../components/TotalMealContent/TotalMealContent\";\nimport NavFooter from \"../components/Footer/NavFooter\";\n\nclass TotalMeal extends Component {\n  render() {\n    return (\n      <Fragment>\n        <Navheader></Navheader>\n        <TotalMealContent></TotalMealContent>\n        <NavFooter></NavFooter>\n      </Fragment>\n    );\n  }\n}\n\nexport default TotalMeal;\n","import React from 'react';\nimport { Redirect, Route } from 'react-router-dom';\nimport { getToken } from '../components/Common/Common';\n\nconst PrivateRoute = ({ component: Component, ...rest }) => {\n    return (\n        <Route\n          {...rest}\n          render={(props) => getToken() ? <Component {...props} /> : <Redirect to={{ pathname: '/login', state: { from: props.location } }} />}\n        />\n      )\n};\n\nexport default PrivateRoute;","import React, { Component, Fragment } from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport HomePage from \"../pages/HomePage\";\nimport AddOrRemoveMember from \"../pages/AddOrRemoveMember\";\nimport CalculateMeal from \"../pages/CalculateMeal\";\nimport DailyCost from \"../pages/DailyCost\";\nimport DepositPage from \"../pages/DepositPage\";\nimport LoginPage from \"../pages/LoginPage\";\nimport PreviousMonth from \"../pages/PreviousMonth\";\nimport RegisterPage from \"../pages/RegisterPage\";\nimport TotalMeal from \"../pages/TotalMeal\";\nimport PrivateRoute from \"./PrivateRoute\";\n\nconst AppRouter = () => {\n    return (\n        <Fragment>\n            <Switch>\n            <PrivateRoute exact path=\"/\" component={HomePage}></PrivateRoute>\n            <Route exact path=\"/AddOrRemoveMember\" component={AddOrRemoveMember}></Route>\n            <Route exact path=\"/CalculateMeal\" component={CalculateMeal}></Route>\n            <Route exact path=\"/DailyCost\" component={DailyCost}></Route>\n            <Route exact path=\"/Deposit\" component={DepositPage}></Route>\n            <Route exact path=\"/Login\" component={LoginPage}></Route>\n            <Route exact path=\"/PreviousMonth\" component={PreviousMonth}></Route>\n            <Route exact path=\"/Register\" component={RegisterPage}></Route>\n            <Route exact path=\"/TotalMeal\" component={TotalMeal}></Route>\n\n\n\n\n            </Switch>\n            \n        </Fragment>\n    );\n};\n\nexport default AppRouter;","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { BrowserRouter } from 'react-router-dom';\nimport AppRouter from './router/AppRouter';\nimport '../src/css/custom.css'\n\nfunction App() {\n  return (\n    <BrowserRouter>\n    <AppRouter></AppRouter>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}